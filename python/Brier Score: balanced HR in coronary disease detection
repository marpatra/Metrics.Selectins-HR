# Import necessary libraries
import numpy as np
import pandas as pd

# The dataset
cardio = [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 
          0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 
          1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 
          1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 
          1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 
          1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 
          0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 
          0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 
          1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 
          0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 
          1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 
          0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 
          1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 
          0, 1, 0, 0]

thal = [6, 3, 7, 3, 3, 3, 3, 3, 7, 7, 6, 3, 6, 7, 7, 3, 7, 3, 3, 3, 
        3, 3, 3, 7, 7, 3, 3, 3, 3, 7, 3, 7, 3, 7, 3, 3, 7, 6, 7, 3, 
        7, 7, 3, 3, 3, 7, 3, 7, 3, 3, 3, 7, 3, 3, 7, 7, 7, 7, 3, 3, 
        7, 3, 7, 3, 7, 7, 3, 7, 7, 3, 3, 7, 7, 6, 3, 3, 7, 3, 3, 7, 
        3, 3, 3, 7, 3, 3, 3, 3, 3, 3, 3, 7, 3, 7, 7, 7, 7, 7, 3, 3, 
        7, 6, 7, 3, 3, 3, 7, 7, 7, 7, 3, 7, 3, 3, 7, 7, 3, 3, 7, 7, 
        3, 3, 3, 3, 7, 7, 7, 3, 3, 7, 3, 7, 7, 3, 7, 3, 3, 3, 7, 3, 
        7, 7, 3, 3, 7, 7, 7, 7, 7, 3, 3, 3, 3, 3, 3, 7, 7, 7, 3, 3, 
        7, 3, 7, 3, 7, 7, 6, 3, 3, 7, 7, 3, 7, 3, 3, 7, 6, 7, 7, 3, 
        7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 7, 7, 7, 3, 3, 7, 3, 7, 7, 3, 
        7, 3, 3, 3, 7, 7, 7, 3, 3, 3, 3, 3, 3, 3, 3, 7, 3, 3, 3, 3, 
        3, 6, 6, 6, 7, 3, 7, 6, 7, 3, 3, 7, 3, 3, 3, 3, 3, 7, 3, 7, 
        3, 7, 3, 7, 6, 6, 7, 7, 3, 7, 3, 7, 3, 7, 7, 6, 7, 7, 7, 7, 
        7, 3, 3, 3]

# Convert '?' to a placeholder value if needed
thal = [val if val != '?' else np.nan for val in thal]

# Ensure both vectors have the same length
min_length = min(len(cardio), len(thal))
cardio = cardio[:min_length]
thal = thal[:min_length]

# Convert thal to a numeric array
thal = np.array(thal, dtype=float)

# Define a threshold for classifying continuous values into binary classes
threshold = 5  # You can adjust this threshold based on your specific problem

# Convert continuous values into binary classes
binary_classes = np.where(thal >= threshold, 1, 0)

# Define the probability mapping for Cardio
cardio_prob = {0: 0.4, 1: 0.6}  # Adjusted probabilities

# Calculate the predicted probabilities
predicted_probabilities = np.array([cardio_prob[d] for d in cardio])

# Calculate the Brier Score manually
brier_score = np.mean((binary_classes - predicted_probabilities) ** 2)

print("Brier Score:", brier_score)
