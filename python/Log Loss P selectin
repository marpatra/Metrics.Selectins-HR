import numpy as np

# Sample data
Diagnosis = ['psoriasis'] * 40 + ['healthy'] * 40
P_selectin = [
    143.8, 106.02, 140.8, 128.2, 108.8, 58.1, 104.6, 136.2, 54.42, 62.8,
    101.94, 148, 116.4, 96.4, 105.44, 95.2, 45.4, 172, 64.76, 61.8,
    40.4, 70.6, 73, 55.2, 11.2, 102.6, 32, 112.6, 67.2, 111.6, 123.4,
    207.4, 228, 66.58, 106, 43.06, 99.96, 86.84, 62.82, 102.6, 72.2,
    90.24, 78.4, 69.48, 48.64, 62.8, 61.32, 92.2, 110.34, 91.4, 91.2,
    104.8, 68.3, 57.06, 82.5, 63.2, 65.94, 95.2, 77.14, 40.4, 100.4,
    83.4, 94.2, 104.4, 76.08, 96.6, 71.06, 71.1, 112.64, 81, 91.96,
    34.84, 56.8, 90, 112.06, 35.6, 45.82, 58.4, 77.2, 85.8
]

# Convert categorical variable to numerical
Diagnosis_numeric = np.where(np.array(Diagnosis) == 'psoriasis', 1, 0)

# Calculate log loss
y_true = np.array(Diagnosis_numeric)
y_pred = np.array(P_selectin)
epsilon = 1e-15  # to prevent log(0) issues
y_pred = np.maximum(epsilon, y_pred)  # clip to prevent log(0)
y_pred = np.minimum(1 - epsilon, y_pred)  # clip to prevent log(1)
log_loss = -np.mean(y_true * np.log(y_pred) + (1 - y_true) * np.log(1 - y_pred))

print("Log Loss:", log_loss)
