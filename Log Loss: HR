import numpy as np

# Sample data
Thalach = [
    150, 108, 129, 187, 172, 178, 160, 163, 147, 155,
    148, 153, 142, 173, 162, 174, 168, 160, 139, 171,
    144, 162, 160, 173, 132, 158, 172, 114, 171, 114,
    151, 160, 158, 161, 179, 178, 120, 112, 132, 137,
    114, 178, 162, 157, 169, 165, 123, 128, 157, 152,
    168, 140, 153, 188, 144, 109, 163, 158, 152, 125,
    142, 160, 131, 170, 113, 142, 155, 165, 140, 147,
    148, 163, 99, 158, 177, 151, 141, 142, 180, 111,
    148, 143, 182, 150, 172, 180, 156, 115, 160, 149,
    151, 145, 146, 175, 172, 161, 142, 157, 158, 186,
    185, 174, 159, 130, 139, 156, 162, 150, 140, 140,
    146, 144, 190, 136, 97, 132, 165, 182, 132, 127,
    150, 154, 143, 111, 174, 175, 133, 126, 170, 163,
    147, 154, 202, 186, 165, 161, 125, 103, 130, 166,
    164, 159, 184, 131, 154, 152, 124, 179, 170, 160,
    178, 122, 160, 145, 96, 109, 173, 171, 170, 151,
    156, 162, 158, 122, 175, 168, 169, 159, 156, 138,
    112, 111, 143, 157, 132, 88, 147, 105, 162, 173,
    166, 150, 178, 145, 161, 179, 194, 120, 195, 146,
    163, 122, 143, 106, 115, 125, 131, 152, 162, 125,
    159, 154, 173, 133, 161, 147, 130, 126, 155, 154,
    170, 182, 168, 165, 160, 162, 172, 152, 122, 182,
    172, 167, 179, 95, 169, 192, 143, 172, 108, 132,
    169, 117, 126, 121, 163, 116, 103, 144, 162, 162,
    153, 163, 163, 145, 96, 71, 156, 118, 168, 140,
    126, 105, 105, 157, 181, 173, 142, 116, 143, 141,
    149, 152, 171, 169, 125, 125, 156, 134, 181, 150,
    138, 138, 120, 125, 162, 155, 152, 152, 164, 131,
    143, 179, 130, 174, 161, 140, 146, 144, 163, 169,
    150, 166, 144, 144, 136, 182, 90, 123, 132, 141,
    115, 174, 173
]
Cardio = [
    0, 1, 1, 0, 0, 0, 1, 0, 1, 1,
    0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
    0, 0, 1, 1, 1, 0, 0, 0, 0, 0,
    1, 0, 1, 1, 0, 0, 0, 1, 1, 1,
    0, 1, 0, 0, 0, 1, 1, 0, 1, 1,
    0, 1, 0, 0, 0, 0, 1, 0, 1, 0,
    1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
    0, 1, 1, 1, 0, 1, 0, 0, 1, 0,
    0, 1, 1, 0, 1, 0, 0, 0, 0, 0,
    1, 0, 0, 0, 0, 0, 1, 0, 0, 1,
    0, 1, 1, 1, 0, 0, 1, 0, 1, 0,
    1, 1, 1, 1, 0, 1, 0, 0, 1, 0,
    1, 1, 0, 1, 1, 0, 1, 0, 1, 1,
    0, 1, 0, 1, 0, 0, 0, 0, 0, 0,
    1, 1, 1, 0, 0, 1, 0, 1, 0, 1,
    0, 1, 0, 0, 0, 0, 1, 1, 0, 1,
    0, 0, 0, 1, 1, 0, 1, 1, 1, 1,
    0, 0, 0, 1, 0, 1, 1, 0, 0, 0,
    0, 1, 0, 1, 0, 1, 0, 1, 1, 1,
    1, 1, 1, 0, 1, 0, 0, 1, 0, 1,
    0, 1, 0, 1, 1, 0, 1, 0, 1, 0,
    0, 1, 0, 0, 0, 0, 0, 0, 1, 0,
    0, 1, 0, 0, 0, 0, 0, 0, 1, 1,
    0, 0, 1, 1, 1, 1, 0, 1, 0, 0,
    0, 0, 0, 0, 0, 1, 1, 0, 0, 1,
    0, 0, 0, 1, 1, 0, 1, 1, 0, 1,
    0, 1, 0, 1, 0, 1, 0, 0, 1, 0,
    1, 0, 0, 1, 1, 0, 1, 0, 1, 0,
    1, 0, 0, 0, 1, 0, 1, 0, 0, 0,
    1, 0, 1, 1
]

# Truncate the longer array to match the length of the shorter array
min_length = min(len(Thalach), len(Cardio))
Thalach = Thalach[:min_length]
Cardio = Cardio[:min_length]

# Convert Cardio to numerical
Cardio_numeric = np.array(Cardio)

# Calculate log loss
y_true = Cardio_numeric
y_pred = np.array(Thalach)
epsilon = 1e-15  # to prevent log(0) issues
y_pred = np.maximum(epsilon, y_pred)  # clip to prevent log(0)
y_pred = np.minimum(1 - epsilon, y_pred)  # clip to prevent log(1)
log_loss = -np.mean(y_true * np.log(y_pred) + (1 - y_true) * np.log(1 - y_pred))

print("Log Loss:", log_loss)

